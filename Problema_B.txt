
.include "m328pdef.inc"

.equ PD_OFF = (1<<PD7) | (1<<PD6) | (1<<PD5) | (1<<PD4)
.equ PB_OFF = (1<<PB3) | (1<<PB2) | (1<<PB1) | (1<<PB0)

.def CONTADOR = r24
.def DIRECCION = r18
.def SETin = r17

    .org 0x0000
    rjmp INICIO

    .org 0x0012
    rjmp overflow

    .org 0x000A
    rjmp botons

	.org 0x0100
		rjmp INICIO




INICIO:
    LDI r16, HIGH(RAMEND)
    OUT SPH, r16
    LDI r16, LOW(RAMEND)
    OUT SPL, r16

    LDI r16, 0x00
    STS TCCR2A, r16
    LDI r16, 0x01
    STS TCCR2B, r16
    LDI r16, 0x01
    STS TIMSK2, r16

    ldi r16, 0b00011000
    out DDRC, r16

    lds  r16, PCMSK1
    ori  r16, (1<<4) | (1<<3)
    sts  PCMSK1, r16

   
    lds  r16, PCICR
    ori  r16, (1<<PCIE1)
    sts  PCICR, r16

    sei

    ldi  r30, low(H<<1)
    ldi  r31, high(H<<1)


    LDI r16, 0xFF
    OUT DDRD, r16

    LDI r16, 0xFF
    OUT DDRB, r16

    ldi r16, 0xFF
    out DDRC, r16

	ldi SETin, 0xFE

    LDI DIRECCION, 0b00010000 ;Para la mascara de referencia
    OUT PORTD, DIRECCION ; PORTD = 00010000
	
    ldi r19, 1

    JMP PRINCIPAL

PRINCIPAL:
	cbi PORTD, PD4
	sbi PORTB, PB5
    RJMP PRINCIPAL

overflow:
	ldi r20, PD_OFF
    OUT  PORTD, r20
	ldi r20, PB_OFF
	OUT  PORTB,	r20

    LPM  DIRECCION, Z+
    INC  CONTADOR
    CPI  CONTADOR, 8
    BRLO skip_reset_ptr
      ldi  r30, low(H<<1)
	  ldi  r31, high(H<<1)
      LDI CONTADOR, 0
skip_reset_ptr:

    MOV  r23, DIRECCION

	LSL  r23
    LSL  r23
    LSL  r23
    LSL  r23 ;Movemos los primeros 4 a los primeros 4 de PIND
	LSL  r23
    LSL  r23 ;Movemos los primeros 4 a los primeros 4 de PIND

    OUT  PORTB, r23

    MOV  r23, DIRECCION 

    LSR  r23
    LSR  r23 ;Movemos los ultimos 4 a los primeos 4 de PINC

    OUT  PORTC, r23

    OUT  PORTD, r17

    LSL  r17
    BRNE end_ovf
      LDI  r17, 0x01
end_ovf:
    RETI

botons:
    in   r0, SREG        
    push r0
    push r16
    push DIRECCION
 
    SBIC PINC, 4
    RJMP continuar1
    INC  r19
continuar1:
    SBIC PINC, 3
    RJMP continuar
    DEC  r19

continuar:
    CPI  r19, 10
    BRNE skip_wrap2
    ldi  r19, 1
skip_wrap2:
    CPI  r19, 0
    BRNE skip_wrap
    LDI  r19, 9

skip_wrap:
    CPI  r19, 1
    BRNE UNO
    LDI  r25, low(H<<1)
    LDI  r26, high(H<<1)
UNO:
    CPI  r19, 2
    BRNE DOS
    LDI  r25, low(O<<1)
    LDI  r26, high(O<<1)
DOS:
    CPI  r19, 3
    BRNE TRES
    LDI  r25, low(L<<1)
    LDI  r26, high(L<<1)
TRES:
    CPI  r19, 4
    BRNE cuatro
    LDI  r25, low(A<<1)
    LDI  r26, high(A<<1)
cuatro:
    CPI  r19, 5
    BRNE cinco      
    LDI  r25, low(J<<1)
    LDI  r26, high(J<<1)
cinco:
    CPI  r19, 6
    BRNE seis
    LDI  r25, low(E<<1) 
    LDI  r26, high(E<<1)
seis:
    CPI  r19, 7
    BRNE siete
    LDI  r25, low(S<<1)
    LDI  r26, high(S<<1)
siete:
    CPI  r19, 8
    BRNE ocho
    LDI  r25, low(U<<1)
    LDI  r26, high(U<<1)
ocho:
    CPI  r19, 9
    BRNE fin
    LDI  r25, low(S<<1)
    LDI  r26, high(S<<1)

 
fin:
    pop  DIRECCION
    pop  r16
    pop  r0
    out  SREG, r0
    RETI



    .org 0x0500
        H:
			.db 0b11111111,	0b00010000 , 0b00010000, 0b00010000  ,0b00010000 ,0b00010000, 0b00010000, 0b11111111
    .org 0x0508
        O:
            .db 0b11111111, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b11111111
    .org 0x0516
        L:
           .db 0b00000000, 0b00000000, 0b11111111, 0b10000000, 0b10000000, 0b10000000, 0b00000000, 0b00000000
    .org 0x0524
        A:
		   .db 0b11111111, 0b00010001, 0b00010001, 0b00010001, 0b00010001, 0b00010001, 0b00010001, 0b11111111
    .org 0x0532
		J:
			.db  0b00000000,0b00000000,0b11100000, 0b10000001, 0b10000001, 0b11111111,0b00000001, 0b00000001

	.org 0x0540
		E:
			.db 0b10000001, 0b10010001, 0b10010001, 0b10010001, 0b10010001, 0b10010001, 0b10010001, 0b11111111

	.org 0x0548
		S:
			.db 0b01100011, 0b10010001, 0b10010001, 0b10010001, 0b10010001, 0b10010001, 0b10001110, 0b00000000

	.org 0x0556
		U:
			.db 0b11111111, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b11111111, 0b11111111


